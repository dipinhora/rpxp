diff --git Makefile Makefile
index fdae42b..376acde 100644
--- Makefile
+++ Makefile
@@ -36,6 +36,7 @@ endif
 # Default settings (silent debug build).
 config ?= debug
 arch ?= native
+bits ?= $(shell getconf LONG_BIT)
 
 ifndef verbose
   SILENT = @
@@ -67,16 +68,16 @@ prefix ?= /usr/local
 destdir ?= $(prefix)/lib/pony/$(tag)
 
 LIB_EXT ?= a
-BUILD_FLAGS = -march=$(arch) -Werror -Wconversion \
+BUILD_FLAGS = -m$(bits) -march=$(arch) -Werror -Wconversion \
   -Wno-sign-conversion -Wextra -Wall
 LINKER_FLAGS = -march=$(arch)
 AR_FLAGS = -rcs
-ALL_CFLAGS = -std=gnu11 -fexceptions \
+ALL_CFLAGS = -m$(bits) -std=gnu11 -fexceptions \
   -DPONY_VERSION=\"$(tag)\" -DPONY_COMPILER=\"$(CC)\" -DPONY_ARCH=\"$(arch)\"
-ALL_CXXFLAGS = -std=gnu++11 -fno-rtti
+ALL_CXXFLAGS = -m$(bits) -std=gnu++11 -fno-rtti
 
 # Determine pointer size in bits.
-BITS := $(shell getconf LONG_BIT)
+BITS := $(bits)
 
 ifeq ($(BITS),64)
        BUILD_FLAGS += -mcx16
diff --git src/libponyc/codegen/codegen.c src/libponyc/codegen/codegen.c
index c9ce8dc..a94bef0 100644
--- src/libponyc/codegen/codegen.c
+++ src/libponyc/codegen/codegen.c
@@ -452,6 +452,7 @@ bool codegen_init(pass_opt_t* opt)
   LLVMInitializeNativeTarget();
   LLVMInitializeAllTargets();
   LLVMInitializeAllTargetMCs();
+  LLVMInitializeAllTargetInfos();
   LLVMInitializeAllAsmPrinters();
   LLVMInitializeAllAsmParsers();
   LLVMEnablePrettyStackTrace();
diff --git src/libponyc/codegen/genprim.c src/libponyc/codegen/genprim.c
index 8afbd81..b9cfe7d 100644
--- src/libponyc/codegen/genprim.c
+++ src/libponyc/codegen/genprim.c
@@ -690,7 +690,7 @@ static void fp_as_bits(compile_t* c)
 
 static void make_cpuid(compile_t* c)
 {
-#ifdef PLATFORM_IS_X86
+#if 0 // PLATFORM_IS_X86
   LLVMTypeRef elems[4] = {c->i32, c->i32, c->i32, c->i32};
   LLVMTypeRef r_type = LLVMStructTypeInContext(c->context, elems, 4, false);
   LLVMTypeRef f_type = LLVMFunctionType(r_type, &c->i32, 1, false);
@@ -713,7 +713,7 @@ static void make_cpuid(compile_t* c)
 
 static void make_rdtscp(compile_t* c)
 {
-#ifdef PLATFORM_IS_X86
+#if 0 // PLATFORM_IS_X86
   // i64 @llvm.x86.rdtscp(i8*)
   LLVMTypeRef f_type = LLVMFunctionType(c->i64, &c->void_ptr, 1, false);
   LLVMValueRef rdtscp = LLVMAddFunction(c->module, "llvm.x86.rdtscp", f_type);
